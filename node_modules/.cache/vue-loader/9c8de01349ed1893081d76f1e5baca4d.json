{"remainingRequest":"/Users/kornilov/thevoyager/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kornilov/thevoyager/frontend/src/views/Welcome.vue?vue&type=style&index=0&id=e4731dd0&scoped=true&lang=scss&","dependencies":[{"path":"/Users/kornilov/thevoyager/frontend/src/views/Welcome.vue","mtime":1590635939563},{"path":"/Users/kornilov/thevoyager/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kornilov/thevoyager/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/kornilov/thevoyager/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/kornilov/thevoyager/frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kornilov/thevoyager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kornilov/thevoyager/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpib2R5LGh0bWx7CiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7CiAgcGFkZGluZzogMDsKICBtYXJnaW46IDA7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwp9Cg=="},{"version":3,"sources":["Welcome.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Welcome.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class = \"welcome\">\n        <NavBar />\n      <form class=\"login form\">\n        <div class=\"field\">\n          <label for=\"id_username\">Username</label>\n          <input\n            v-model=\"username\"\n            type=\"text\"\n            placeholder=\"Username\"\n            autofocus=\"autofocus\"\n            maxlength=\"150\"\n            id=\"id_username\">\n        </div>\n        <div class=\"field\">\n          <label for=\"id_password\">Password</label>\n          <input\n            v-model=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            id=\"id_password\">\n        </div>\n        <button\n          @click.prevent=\"authenticate\"\n          class=\"button primary\"\n          type=\"submit\">\n          Log In\n        </button>\n      </form>\n    </div>\n</template>\n\n<script>\nimport NavBar from '@/components/NavBar.vue'\n\nexport default {\n\n  import axios from 'axios'\n\n  name: 'Welcome',\n  components: {\n    NavBar\n  },\n  data () {\n    return{\n      username: '',\n      password: ''\n    }\n  },\n  methods: {\n    authenticate () {\n      const payload = {\n        username: this.username,\n        password: this.password\n      }\n      axios.post(this.$store.state.endpoints.obtainJWT, payload)\n        .then((response) => {\n          this.$store.commit('updateToken', response.data.token)\n          // get and set auth user\n          const base = {\n            baseURL: this.$store.state.endpoints.baseUrl,\n            headers: {\n              // Set your Authorization to 'JWT', not Bearer!!!\n              Authorization: `JWT ${this.$store.state.jwt}`,\n              'Content-Type': 'application/json'\n            },\n            xhrFields: {\n              withCredentials: true\n            }\n          }\n          // Even though the authentication returned a user object that can be\n          // decoded, we fetch it again. This way we aren't super dependant on\n          // JWT and can plug in something else.\n          const axiosInstance = axios.create(base)\n          axiosInstance({\n            url: \"/user/\",\n            method: \"get\",\n            params: {}\n          })\n            .then((response) => {\n              this.$store.commit(\"setAuthUser\",\n                {authUser: response.data, isAuthenticated: true}\n              )\n              this.$router.push({name: 'Home'})\n            })\n\n        })\n        .catch((error) => {\n          console.log(error);\n          console.debug(error);\n          console.dir(error);\n        })\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n  body,html{\n    background-color: black;\n    padding: 0;\n    margin: 0;\n    width: 100%;\n    height: 100%;\n  }\n</style>\n"]}]}